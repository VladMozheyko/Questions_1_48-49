import com.sun.org.apache.xalan.internal.xsltc.compiler.sym;

// Описывается класс
public class Main {
    /*
    План занятия
    1) Ответы на вопросы
    2) Учиться искать информацию
     */

    /*
    Теория
    Программа - последовательность действий, которую выполняет компьютер. В Java все программы состоят из классов. Классы
    принято называть с большой буквы. Обязательное правило - класс должен иметь такое же название как и файл, в котором он
    находится.
    В Java исполнение программы начинается с метода main(точка входа)
    Литерал - явно указанное значение
    Переменная - область память, которая может принимать произвольное значение.
    Чтобы осуществлять определенные операции с переменными введено понятие типа
    В Java существуют ссылочные и примитивные типы.
    Примитивные типы(их всего 8) содержаться в языке и имеют свою специфику(ее объясним позже):
    byte         - Целочисленные типы, отличаются по объему памяти, выделенной для них
    short
    int
    long
    float       - Вещественные числа(дробные)
    double
    char        - Символьный тип
    boolean    - Логический тип
                      Работа с примитивным типом
   Указал тип     Декларирую(объявляю) переменную       Присваиваю значение(инициализация)
    int                          a                           =  7;

                                 Работа со ссылочными типами
   Указал тип                    Декларирую(объявляю) переменную              Присваиваю значение(инициализация)
    Human(мой класс)                         human                           =  new Human(Здесь будут параметры типа);

    Локальная переменная - переменная, определенная в методе, она видна только в пределах этого метода
    Строка - набор символов

     */


    /*
    Заметки
    В зависимости от версии языка может меняться его синтаксис.
     */

    /*

     */

    /*
    Задачки*
    1) Продемонстрировать переполнение типа
    2) Показать явное и неявное приведение типов
    3) Преобразовать примитивный тип к строке
    4) Создать метод для сложения чисел
    5) Форматированный вывод
    6) Сделать таблицу со всеми примитивными типами

    Подсказка о приведение к строке:
      int i = 10;
        String str = " " + i;         // Неявное приведение. Прибавляю переменные к строке
        String str1 = String.valueOf(i); // Приведение при помощи специального метода. valueOf получает стрроку из примитива
     */

    /*
    Задача дз

     Дано трехзначное число. Вывести на экран все цифры этого числа по одной

     Решение
     Преобразовать переменную к строке и вывести ее посимвольно

     Решения со строкой. Для тех кто знаком со String
        //String sym = "" + a;      // Преобраззование к строке 1 вариант
        // String sym = String.valueOf(a); // Преобразование к строке 2 вариант
        String sym = String.valueOf(a);
        System.out.println(sym);
        System.out.println("Первая цифра: " + sym.charAt(0));
        System.out.println("Вторая цифра: " + sym.charAt(1));
        System.out.println("Третья цифра: " + sym.charAt(2));

     */
    public static void main(String[] args) {      // Метод main - точка входа. Отсюда начинается исполнение программы. Построчно
        System.out.println("Hello, World!");        // Вывожу текст в консоль. С переходом на новую строку
        System.out.println("Привет, Java!");       // Строчка выполнится после верхней строки
        System.out.print("Hello, ");             // Без перехода но новую строку
        System.out.print(" World!\n");          // \n - переход на новую строку

        int x = 10;     // Создаем переменню(декларируем) типа int и инициализируем(присваиваем ей значение) 10
                        // Собираю вывод: через + можно выводить несколько аргументов
        System.out.println("Значение x = " + x); // Вывожу переменную в консоль

        double d = 14.743;

        String str = "";

        // Аргументы в этом операторе  указываются не через +, а через запятую

        System.out.printf("%5s %15d %5.3f\n", str , x, d);     // Форматированный вывод, в кавычках указываем тип выводимой переменной  и кол-во символов для этой переменной.
        System.out.printf("%15s | %15s | %15s | %15s | %15s | %15s | %15s | %15s |\n","byte", "short", "int", "long",
                "float", "double",
                "char", "boolean");
        byte b = 1;                       // Добавляю примитивные типы
        short s = 2000;
        int i = 1000000000;
        long l = 10000000000l;
        float f = 12.345f;
        double d1 = 25.64775;
        char c = 's';
        boolean bool = true;


        System.out.println("-------------------------------------------------------------------------------------------" +
                "---------------------------------------------------+");   // Неформатированный вывод
        System.out.printf("%15s | %15s | %15s | %15s | %15s | %15s | %15s | %15s |\n", b, s, i, l, f, d1, c, bool); // Вывожу значения примитивных типов

        int a = 321;               // Решаем задачу из дз

        System.out.println("Первая цифра: " + a/100);       // Выводи цифры оперируя остаттком от деления и усечением числа
        System.out.println("Вторая цифра: " + a/10%10);
        System.out.println("Третья цифра: " + + a%10);


    }
}
